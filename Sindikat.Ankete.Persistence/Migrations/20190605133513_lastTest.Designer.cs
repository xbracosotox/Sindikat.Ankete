// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sindikat.Ankete.Persistence;

namespace Sindikat.Ankete.Persistence.Migrations
{
    [DbContext(typeof(AnketeDbContext))]
    [Migration("20190605133513_lastTest")]
    partial class lastTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SindikatAnkete.Entity.AnketaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<string>("Opis");

                    b.Property<DateTime>("VrijemeKreiranja");

                    b.Property<bool>("status");

                    b.HasKey("Id");

                    b.ToTable("Ankete");
                });

            modelBuilder.Entity("SindikatAnkete.Entity.OdgovorEntity", b =>
                {
                    b.Property<int>("PitanjeId");

                    b.Property<string>("KorisnikId");

                    b.Property<string>("OdgovorPitanja")
                        .IsRequired();

                    b.HasKey("PitanjeId", "KorisnikId");

                    b.ToTable("Odgovori");
                });

            modelBuilder.Entity("SindikatAnkete.Entity.PitanjeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnketaId");

                    b.Property<string>("TekstPitanja")
                        .IsRequired();

                    b.Property<int?>("TipPitanjaId");

                    b.HasKey("Id");

                    b.HasIndex("AnketaId");

                    b.HasIndex("TipPitanjaId");

                    b.ToTable("Pitanja");
                });

            modelBuilder.Entity("SindikatAnkete.Entity.PonudeniOdgovorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefiniraniOdgovor")
                        .IsRequired();

                    b.Property<int?>("PitanjeId");

                    b.HasKey("Id");

                    b.HasIndex("PitanjeId");

                    b.ToTable("PonudeniOdgovori");
                });

            modelBuilder.Entity("SindikatAnkete.Entity.PopunjenaAnketaEntity", b =>
                {
                    b.Property<int>("AnketaId");

                    b.Property<string>("KorisnikId");

                    b.HasKey("AnketaId", "KorisnikId");

                    b.ToTable("PopunjeneAnkete");
                });

            modelBuilder.Entity("SindikatAnkete.Entity.TipPitanjaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VrstaPitanja")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TipoviPitanja");
                });

            modelBuilder.Entity("SindikatAnkete.Entity.OdgovorEntity", b =>
                {
                    b.HasOne("SindikatAnkete.Entity.PitanjeEntity", "Pitanje")
                        .WithMany("Odgovori")
                        .HasForeignKey("PitanjeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SindikatAnkete.Entity.PitanjeEntity", b =>
                {
                    b.HasOne("SindikatAnkete.Entity.AnketaEntity", "Anketa")
                        .WithMany("Pitanja")
                        .HasForeignKey("AnketaId");

                    b.HasOne("SindikatAnkete.Entity.TipPitanjaEntity", "TipPitanja")
                        .WithMany()
                        .HasForeignKey("TipPitanjaId");
                });

            modelBuilder.Entity("SindikatAnkete.Entity.PonudeniOdgovorEntity", b =>
                {
                    b.HasOne("SindikatAnkete.Entity.PitanjeEntity", "Pitanje")
                        .WithMany("PonudeniOdgovori")
                        .HasForeignKey("PitanjeId");
                });

            modelBuilder.Entity("SindikatAnkete.Entity.PopunjenaAnketaEntity", b =>
                {
                    b.HasOne("SindikatAnkete.Entity.AnketaEntity", "Anketa")
                        .WithMany()
                        .HasForeignKey("AnketaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
